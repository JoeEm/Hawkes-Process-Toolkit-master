%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
% Learning Granger causality for Hawkes processes by MLE based method
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


clear


%for Tmax 1 = 1honr, 1 week = 24*7 = 168, 
switchFlag = 1;

options.N = 500; % the number of sequences                       2000
options.Nmax = 1000; % the maximum number of events per sequence 500
options.Tmax = 400; % the maximum size of time window            200
options.tstep = 0.1;
options.dt = 0.1; % the length of each time step
options.M = 250; % the number of steps in the time interval for computing sup-intensity
options.GenerationNum = 100; % the number of generations for branch processing
D = 8; % the dimension of Hawkes processes



disp('Approximate simulation of Hawkes processes via branching process')
disp('Complicated gaussian kernel')
para.kernel = 'gauss'; % the type of kernels per impact function
para.w = 2; % the bandwidth of gaussian kernel
para.landmark = 0:4:12; % the central locations of kernels
L = length(para.landmark);

% initialize ground truth parameters
para.mu = rand(D,1)/D;
para.A = zeros(D, D, L);
for l = 1:L
    para.A(:,:,l) = (0.5^l)*(0.5+ones(D));
end
mask = rand(D).*double(rand(D)>0.7);
para.A = para.A.*repmat(mask, [1,1,L]);
para.A = 0.25*para.A./max(abs(eig(sum(para.A,3)))); % ensure the stationarity of Hawkes process
tmp = para.A;
para.A = reshape(para.A, [D, L, D]);
for di = 1:D
    for dj = 1:D
        phi = tmp(di, dj, :);
        para.A(dj, :, di) = phi(:);
    end
end










%%
% Visualize all impact functions and infectivity matrix
A = ImpactFunc( para, options );



for di = 1:D
    for dj = 1:D
        if (...
            (di == 1 && (dj == 1 || dj ==2 || dj ==3 || dj ==4)) ||... 
            (di == 2 && (dj == 1 || dj ==2 || dj ==3 || dj ==4)) ||...
            (di == 3 && (dj == 1 || dj ==2 || dj ==3 || dj ==4)) ||...
            (di == 4 && (dj == 1 || dj ==2 || dj ==3 || dj ==4)) ||...
            (di == 5 && (dj == 5 || dj ==6 || dj ==7 || dj ==8)) ||...
            (di == 6 && (dj == 5 || dj ==6 || dj ==7 || dj ==8)) ||...
            (di == 7 && (dj == 5 || dj ==6 || dj ==7 || dj ==8)) ||...
            (di == 8 && (dj == 5 || dj ==6 || dj ==7 || dj ==8)))

                para.A(dj, :, di) = 0;
        end
    end
end


%%
% Visualize all impact functions and infectivity matrix
A1 = ImpactFunc( para, options );

figure
subplot(121)        
imagesc(A)
title('Ground truth of infectivity G1')
axis square
colorbar

subplot(122)        
imagesc(A1)
title('Ground truth of infectivity G2') 
axis square
colorbar

[Seqs1,options] = GeneratingSimulationData();




disp('Maximum likelihood estimation and basis representation') 

alg1.LowRank = 0; % without low-rank regularizer
alg1.Sparse = 1; % with sparse regularizer
alg1.alphaS = 10; %MLE-S
alg1.GroupSparse = 1; % with group-sparse regularizer
alg1.alphaGS = 100; %MLE-SGL
alg1.outer = 5;%5
alg1.rho = 0.1; % the initial parameter for ADMM
alg1.inner = 8;%8
alg1.thres = 1e-5;
alg1.Tmax = [];
alg1.storeErr = 0;
alg1.storeLL = 0;
alg1.As = 10; %for Local Independence R.
alg1.Ap = 1000;%for Pairwise similarity R.


model1 = Initialization_Basis(Seqs1); 

%model1 = Initialization_Basis(Seqs1);
% model1.kernel = 'gauss';
% model1.w = pi*options.Nmax/(options.Tmax);  %According to the Real-Data Experiment
% model1.landmark = (model1.w)*(0:ceil(options.Tmax/model1.w));
% model1.A = rand(D, length(model1.landmark), D);
% model1.mu = rand(D, 1)./D;


%learning the model by MLE (first half )
[NewSeqs1, NewSeqs2]  = BreakSeqs(Seqs1, length(Seqs)/2);
model1 = Initialization_Basis(NewSeqs1); 
model1_A = Learning_MLE_Basis( NewSeqs1, model1, alg1 ); 
model1_result_A = ImpactFunc( model1_A, options );

%learning the model by MLE (second half )
model2 = Initialization_Basis(NewSeqs2); 
model2_A = Learning_MLE_Basis( NewSeqs2, model2, alg1 ); 
model2_result_A = ImpactFunc( model2_A, options );



% Visualize the infectivity matrix (the adjacent matrix of Granger causality graph)
figure
subplot(121)        
imagesc(A)
title('Ground truth of infectivity') 
axis square
colorbar
subplot(122)        
imagesc(A1)
title('Estimated infectivity-MLE')
colorbar
axis square
